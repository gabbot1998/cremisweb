{"version":3,"sources":["logo.svg","App.js","NoteBoard/guestSignatureForm.js","button.js","NoteBoard/messageItem.js","NoteBoard/noteBoard.js","TestApp.js","util/vSpace.js","home/topBar.js","welcome/nameBox.js","util/button.js","home/home.js","serviceWorker.js","index.js"],"names":["module","exports","App","NoteForm","React","Component","props","state","signature","message","changeMessage","bind","handleSubmit","changeName","postToApi","render","event","this","setState","target","value","console","log","data","fetch","method","headers","body","preventDefault","onSubmit","type","defaultValue","onChange","MessageItem","class","name","NoteBoard","array","Array","updateNoteBoard","newState","fetchAllMessages","then","res","json","displayAllMessages","length","i","push","isArray","VSpace","padding","style","marginTop","TopBar","Fragment","currentColor","text","nameBox","prideColors","NameBox","index","updateNameBox","Button","backgroundColor","Home","clearInterval","document","overflow","colorIndex","updateColor","topBarText","menuItems","hasRenderedTopBar","displayingTopScreen","currentScreen","topPage","bottomPage","handleScroll","mouseOverTopBar","mouseNotOnTopBar","switchScreen","sleep","renderPage","scroll","scrollToTop","window","addEventListener","interval","setInterval","removeEventListener","pageYOffset","ms","Promise","resolve","setTimeout","newScreen","location","newTopPage","newBottomPage","renderScreen","scroller","scrollTo","duration","delay","smooth","currentTopPage","id","onMouseOver","onMouseLeave","onClick","left","activeClass","className","to","spy","offset","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05c1174f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React Waddafcuk this no work\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport TestApp from './../TestApp'\n\nclass NoteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {signature: 'Gabriel', message: 'Borglund'};\n\n    this.changeMessage = this.changeMessage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.changeName = this.changeName.bind(this);\n    this.postToApi = this.postToApi.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  changeMessage(event) {\n    this.setState({message: event.target.value});\n  }\n\n  changeName(event) {\n\n    this.setState({signature: event.target.value});\n    console.log(this.state.signature);\n  }\n\n  postToApi() {\n    var ending = '\"}';\n    var messageString = '\",\"message\":\"';\n    var nameString = '{\"name\":\"';\n    console.log();\n\n    var data = nameString + this.state.signature + messageString + this.state.message + ending;\n\n    fetch('http://localhost:4000/note/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: data\n    });\n  }\n\n  handleSubmit(event) {\n    this.postToApi();\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n      <label>\n        Name :\n        <input type=\"text\" defaultValue={this.state.signature || \"name\"} onChange={this.changeName} />\n      </label>\n      <label>\n        message :\n        <input type=\"text\" defaultValue={this.state.message} onChange={this.changeMessage} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default NoteForm;\n","import React from 'react';\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {id: ''}\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  //This is how i get the data on index 0 of the JSSON object sent by the api!\n  handleClick(event) {\n    //this.setState(id: event.target.id)\n    fetch('http://localhost:4000/note/' + this.state.id)\n    .then(res => res.json())\n    .then(data => console.log(data[0]));\n\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({id: event.target.id});\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n\n      <form onSubmit={this.handleSubmit}>\n      <label>\n        Get message by ID:\n        <input type=\"text\" value=\"id\" onChange={this.handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n      <input type=\"submit\" defaultValue=\"id\" onChange={this.handleChange}/>\n      <button onClick={this.handleClick}>Button</button>\n      </form>\n    );\n  }\n}\n\nexport default Toggle;\n","import React from 'react';\nimport './messageItem.css'\n\nclass MessageItem extends React.Component {\n  //The constructor takes a message and a name. For example this.props.name\n  // or this.props.message\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return(\n      <div class=\"quote\">\n        <div class=\"message\">\"{this.props.message}\"</div>\n        <div class=\"name\">-{this.props.name}</div>\n      </div>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React from 'react';\nimport MessageItem from './messageItem';\nimport './noteBoard.css';\n\n\nclass NoteBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {array: new Array()};\n    this.updateNoteBoard = this.updateNoteBoard.bind(this);\n  }\n\n  updateNoteBoard(newState) {\n    this.setState({array: newState});\n  }\n\n  componentDidMount() {\n    this.fetchAllMessages();\n  }\n\n  fetchAllMessages() {\n    fetch('http://localhost:4000/note/all', {\n      method: 'GET',\n      //headers: {\n        //'Accept': 'application/json',\n        //'Content-Type': 'application/json'\n      //},\n      //body: data\n    })\n    .then(res => res.json())\n    .then(data => this.displayAllMessages(data));\n  }\n\n  displayAllMessages(data) {\n    console.log(data.length);\n    let array = new Array();\n\n    for(let i = 0; i < data.length; i = (i + 2)) {\n      array.push(\n        <MessageItem name={data[i]} message={data[i + 1]}/>\n      );\n    }\n\n\n    this.updateNoteBoard(array);\n    console.log(Array.isArray(this.state.array));\n    //return(<div>{array}</div>);\n  }\n\n  render() {\n    return (\n      <div class=\"noteBoard\">{this.state.array}</div>\n    );\n  }\n\n\n}\n\nexport default NoteBoard\n","import React, { Component } from 'react';\nimport Toggle from './button';\nimport NoteForm from './NoteBoard/guestSignatureForm'\nimport NoteBoard from './NoteBoard/noteBoard.js'\n\n\nconst API = 'https://localhost:4000/note/'\nconst ID = '2'\n\nclass TestApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {noteBoard: new NoteBoard()};\n\n    this.updateNoteBoard = this.updateNoteBoard.bind(this);\n  }\n\n  updateNoteBoard(newNoteBoard) {\n    this.setState(newNoteBoard);\n  }\n\n\n  render() {\n    return (\n      <body>\n        <h1>Welcome</h1>\n          <div>\n            <NoteForm />\n          </div>\n          <div>\n            <NoteBoard />\n          </div>\n      </body>\n    );\n  }\n}\n\nexport default TestApp;\n","import React from 'react'\n\nclass VSpace extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {padding: props.padding};\n  }\n\n  componentDidMount() {\n    console.log(this.state.padding);\n  }\n\n  render() {\n\n    return(\n      <div style={{marginTop: this.state.padding}}></div>\n    );\n  }\n\n}\n\nexport default VSpace;\n","import React from 'react';\nimport VSpace from './../util/vSpace';\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\n\nimport './topBar.css';\n\nclass TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n              <div class=\"stickyTopBar\" style={this.props.currentColor}>{this.props.text}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TopBar;\n","import React from 'react';\nimport { Link, animateScroll as scroll} from \"react-scroll\";\n\nimport './nameBox.css';\n\n  const name = \"CREMIS\";\n  const nameBox = \"nameBoxRed\";\n  const nameBoxPink = \"nameBoxPink\";\n  const prideColors = [ \"nameBoxRed\", \"nameBoxOrange\", \"nameBoxYellow\",\n                        \"nameBoxGreen\", \"nameBoxBlue\", \"nameBoxPurple\"];\n\nclass NameBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {name: name, nameBox: nameBox, index: 0};\n    this.updateNameBox = this.updateNameBox.bind(this);\n  }\n\n  updateNameBox(event) {\n    this.setState({nameBox: prideColors[this.state.index]});\n  }\n\n  componentDidMount() {\n    this.setState({name: name})\n  }\n\n  render() {\n    return(\n      <div class={this.state.nameBox} style={this.props.currentColor}> {this.state.name}</div>\n    );\n  }\n\n}\n\nexport default NameBox;\n","import React from 'react'\n\nimport './styledButton.css'\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //the button needs to have a text and a function from the beginning. These will be sent with props.\n    this.state = {text: props.text};\n  }\n\n  render() {\n    return(\n      <div class=\"styledButton\">{this.props.text}</div>\n    );\n  }\n\n}\n\nexport default Button;\n","import React from 'react';\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport VSpace from './../util/vSpace';\nimport TopBar from './topBar';\nimport NameBox from './../welcome/nameBox';\nimport Button from './../util/button';\n\nimport './../util/title.css';\nimport './../util/body.css';\n\nconst prideColors = [ {backgroundColor: \"rgba(234, 62, 55, 0.9)\"},\n                      {backgroundColor: \"rgba(246, 143, 31, 0.9)\"},\n                      {backgroundColor: \"rgba(246, 213, 9, 0.9)\"},\n                      {backgroundColor: \"rgba(168, 203, 56, 0.9)\"},\n                      {backgroundColor: \"rgba(32, 154, 207, 0.9)\"},\n                      {backgroundColor: \"rgba(170, 82, 160, 0.9)\"},\n                     ];\n\nconst interval = clearInterval();\n\n//The entire application will live inside of the home component!\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    document.body.style.overflow = \"hidden\";\n    this.state = {\n      colorIndex: 0,\n      currentColor: {},\n      updateColor: true,\n      topBarText: \"\",\n      menuItems: [],\n      hasRenderedTopBar: false,\n      displayingTopScreen: true,\n      currentScreen: \"HOME\", //Can be \"HOME\", \"PROJECTS\", \"ABOUT\", etc.\n      topPage: <div>This is the top page </div>,\n      bottomPage: <div>This is the bottom page </div>\n    };\n    this.updateColor = this.updateColor.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.mouseOverTopBar = this.mouseOverTopBar.bind(this);\n    this.mouseNotOnTopBar = this.mouseNotOnTopBar.bind(this);\n    this.switchScreen = this.switchScreen.bind(this);\n    this.sleep = this.sleep.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    this.interval = setInterval(() => {\n      if(this.state.updateColor){\n        this.setState({colorIndex: (this.state.colorIndex + 1) % prideColors.length});\n      }\n      this.updateColor();},\n      1000);\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmountes\");\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll(event) {\n    if(window.pageYOffset > 167){\n\n      if(!this.state.hasRenderedTopBar){\n        this.setState({updateColor: false});\n        this.setState({topBarText: \"CREMIS\"});\n        this.setState({hasRenderedTopBar: true});\n      }\n    } else {\n      this.setState({updateColor: true});\n      this.setState({topBarText: \"\"});\n      this.setState({menuItems: []});\n      this.setState({hasRenderedTopBar: false});\n\n    }\n  }\n\n  updateColor() {\n    this.setState({currentColor: prideColors[this.state.colorIndex]});\n  }\n\n  mouseOverTopBar() {\n    this.setState({updateColor: true});\n    this.setState({menuItems: [\"HOME\", \"PROJECTS\", \"ABOUT\", \"BLOG\"]});\n  }\n\n  mouseNotOnTopBar() {\n  this.setState({updateColor: false});\n  this.setState({menuItems: []});\n\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  //scroller.scrollTo('topPage', {\n  //  duration: 800,\n  //  delay: 0,\n  //  smooth: 'easeInOutQuart'\n  //});\n\n  renderPage(newScreen) {\n      switch (newScreen) {\n        case \"ABOUT\":\n        return <div>This is the screen showing stuff about me</div>\n        break;\n\n        case \"PROJECTS\":\n        return <div>Welcome to my projects. There are no projekts here at the moment...</div>\n        break;\n\n        case \"BLOG\":\n        return <div>This is suppose to be the blog part of the page... Tja, tja bloggen! osv</div>\n      }\n  }\n\n  renderScreen(newScreen, location) {\n    switch (location) {\n      case \"TOP\":\n        let newTopPage = this.renderPage(newScreen);\n        this.setState({topPage: newTopPage})\n        break;\n\n      case \"BOTTOM\":\n        let newBottomPage = this.renderPage(newScreen);\n        this.setState({bottomPage: newBottomPage})\n        break;\n\n      default:\n\n    }\n  }\n\n  switchScreen(newScreen) {\n\n    if(newScreen === this.state.currentScreen){\n      //Do nothhing\n    } else if(this.state.displayingTopScreen){\n      this.setState({bottomPage: newScreen});\n      this.setState({currentScreen: newScreen})\n      this.renderScreen(newScreen, \"BOTTOM\");\n      this.setState({displayingTopScreen: false})\n      scroller.scrollTo('bottomPage', {\n        duration: 600,\n        delay: 0,\n        smooth: 'easeInOutQuart'\n      });\n    } else {\n      this.setState({currentTopPage: newScreen});\n      this.setState({displayingTopScreen: true});\n      this.setState({currentScreen: newScreen})\n      this.renderScreen(newScreen, \"TOP\");\n      scroller.scrollTo('topPage', {\n        duration: 600,\n        delay: 0,\n        smooth: 'easeInOutQuart'\n      });\n    }\n\n  }\n\n\n  render() {\n    return(\n      <body id=\"topOfBody\">\n\n\n        <div onMouseOver={this.mouseOverTopBar} onMouseLeave={this.mouseNotOnTopBar} >\n        <TopBar currentColor={this.state.currentColor} text={this.state.topBarText} onClick={scroll.scrollToTop}/>\n        <div class=\"menuItem\" style={{left: \"70px\"}} onClick={scroll.scrollToTop}>{this.state.menuItems[0]}</div>\n        <div class=\"menuItem\" style={{left: \"150px\"}} newScreen={\"PROJECTS\"} onClick={() => this.switchScreen(\"PROJECTS\")} >{this.state.menuItems[1]}</div>\n        <div class=\"menuItem\" style={{left: \"230px\"}} newScreen={\"ABOUT\"} onClick={() => this.switchScreen(\"ABOUT\")}>{this.state.menuItems[2]}</div>\n        <div class=\"menuItem\" style={{left: \"300px\"}} newScreen={\"BLOG\"} onClick={() => this.switchScreen(\"BLOG\")}>{this.state.menuItems[3]}</div>\n        </div>\n\n\n\n\n\n\n        <div>\n        <NameBox currentColor={this.state.currentColor}/>\n        <div class=\"title\">\n        Welcome to my personal page. Let's see what we can achieve together!\n        <VSpace padding={200}/>\n        </div>\n        <div>\n        <div>\n        <Link activeClass=\"active\"\n          className=\"test1\"\n          to=\"topPage\"\n          spy={false}\n          smooth={true}\n          duration={600}\n          offset={-75}\n        >\n        <Button text=\"ENTER\" onClick={() => this.switchScreen(\"ABOUT\")}/>\n        </Link>\n        </div>\n        </div>\n\n\n          <div class=\"title\">\n          <VSpace padding={400} />\n          <Element name=\"topPage\" className=\"element\">\n          Navigation\n          </Element>\n          </div>\n          <div>\n            <VSpace padding={30} />\n          </div>\n          <div class=\"body\">\n            {this.state.topPage}\n          </div>\n          </div>\n\n          <div class=\"title\">\n          <VSpace padding={800} />\n          <Element name=\"bottomPage\" className=\"element\">\n          Navigation\n          </Element>\n          </div>\n          <div>\n            <VSpace padding={30} />\n          </div>\n          <div class=\"body\">\n            {this.state.bottomPage}\n            <VSpace padding={800}/>\n          </div>\n\n\n      </body>\n    );\n  }\n\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TestApp from './TestApp';\nimport Home from './home/home'\nimport * as serviceWorker from './serviceWorker';\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n  <html>\n    <body>\n      <div id=\"app\">\n        <div id=\"scroll-container\" style={{overflow: \"hidden\"}}>\n          <Home />\n      </div>\n      </div>\n    </body>\n  </html>, document.getElementById('root'));\n//ReactDOM.render(<div>hejo</div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}