{"version":3,"sources":["logo.svg","App.js","NoteBoard/guestSignatureForm.js","button.js","NoteBoard/messageItem.js","NoteBoard/noteBoard.js","TestApp.js","welcome/nameBox.js","welcome/button.js","util/vSpace.js","welcome/welcome.js","home/longText.js","home/topBar.js","util/button.js","home/home.js","serviceWorker.js","index.js"],"names":["module","exports","App","NoteForm","React","Component","props","state","signature","message","changeMessage","bind","handleSubmit","changeName","postToApi","render","event","this","setState","target","value","console","log","data","fetch","method","headers","body","preventDefault","onSubmit","type","defaultValue","onChange","MessageItem","class","name","NoteBoard","array","Array","updateNoteBoard","newState","fetchAllMessages","then","res","json","displayAllMessages","length","i","push","isArray","nameBox","prideColors","NameBox","index","updateNameBox","style","currentColor","Button","text","executeFunction","document","overflow","getElementById","container","scrollIntoView","onClick","VSpace","padding","marginTop","LongText","TopBar","show","Fragment","id","className","backgroundColor","Home","clearInterval","colorIndex","updateColor","topBarText","hasRenderedTopBar","handleScroll","setUpdateColorTrue","setUpdateColorFalse","scroll","scrollToTop","window","addEventListener","interval","setInterval","removeEventListener","pageYOffset","onMouseOver","onMouseLeave","activeClass","to","spy","smooth","duration","offset","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebff650e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React Waddafcuk this no work\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport TestApp from './../TestApp'\n\nclass NoteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {signature: 'Gabriel', message: 'Borglund'};\n\n    this.changeMessage = this.changeMessage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.changeName = this.changeName.bind(this);\n    this.postToApi = this.postToApi.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  changeMessage(event) {\n    this.setState({message: event.target.value});\n  }\n\n  changeName(event) {\n\n    this.setState({signature: event.target.value});\n    console.log(this.state.signature);\n  }\n\n  postToApi() {\n    var ending = '\"}';\n    var messageString = '\",\"message\":\"';\n    var nameString = '{\"name\":\"';\n    console.log();\n\n    var data = nameString + this.state.signature + messageString + this.state.message + ending;\n\n    fetch('http://localhost:4000/note/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: data\n    });\n  }\n\n  handleSubmit(event) {\n    this.postToApi();\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n      <label>\n        Name :\n        <input type=\"text\" defaultValue={this.state.signature ||Â \"name\"} onChange={this.changeName} />\n      </label>\n      <label>\n        message :\n        <input type=\"text\" defaultValue={this.state.message} onChange={this.changeMessage} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default NoteForm;\n","import React from 'react';\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {id: ''}\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  //This is how i get the data on index 0 of the JSSON object sent by the api!\n  handleClick(event) {\n    //this.setState(id: event.target.id)\n    fetch('http://localhost:4000/note/' + this.state.id)\n    .then(res => res.json())\n    .then(data => console.log(data[0]));\n\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({id: event.target.id});\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n\n      <form onSubmit={this.handleSubmit}>\n      <label>\n        Get message by ID:\n        <input type=\"text\" value=\"id\" onChange={this.handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n      <input type=\"submit\" defaultValue=\"id\" onChange={this.handleChange}/>\n      <button onClick={this.handleClick}>Button</button>\n      </form>\n    );\n  }\n}\n\nexport default Toggle;\n","import React from 'react';\nimport './messageItem.css'\n\nclass MessageItem extends React.Component {\n  //The constructor takes a message and a name. For example this.props.name\n  // or this.props.message\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return(\n      <div class=\"quote\">\n        <div class=\"message\">\"{this.props.message}\"</div>\n        <div class=\"name\">-{this.props.name}</div>\n      </div>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React from 'react';\nimport MessageItem from './messageItem';\nimport './noteBoard.css';\n\n\nclass NoteBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {array: new Array()};\n    this.updateNoteBoard = this.updateNoteBoard.bind(this);\n  }\n\n  updateNoteBoard(newState) {\n    this.setState({array: newState});\n  }\n\n  componentDidMount() {\n    this.fetchAllMessages();\n  }\n\n  fetchAllMessages() {\n    fetch('http://localhost:4000/note/all', {\n      method: 'GET',\n      //headers: {\n        //'Accept': 'application/json',\n        //'Content-Type': 'application/json'\n      //},\n      //body: data\n    })\n    .then(res => res.json())\n    .then(data => this.displayAllMessages(data));\n  }\n\n  displayAllMessages(data) {\n    console.log(data.length);\n    let array = new Array();\n\n    for(let i = 0; i < data.length; i = (i + 2)) {\n      array.push(\n        <MessageItem name={data[i]} message={data[i + 1]}/>\n      );\n    }\n\n\n    this.updateNoteBoard(array);\n    console.log(Array.isArray(this.state.array));\n    //return(<div>{array}</div>);\n  }\n\n  render() {\n    return (\n      <div class=\"noteBoard\">{this.state.array}</div>\n    );\n  }\n\n\n}\n\nexport default NoteBoard\n","import React, { Component } from 'react';\nimport Toggle from './button';\nimport NoteForm from './NoteBoard/guestSignatureForm'\nimport NoteBoard from './NoteBoard/noteBoard.js'\n\n\nconst API = 'https://localhost:4000/note/'\nconst ID = '2'\n\nclass TestApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {noteBoard: new NoteBoard()};\n\n    this.updateNoteBoard = this.updateNoteBoard.bind(this);\n  }\n\n  updateNoteBoard(newNoteBoard) {\n    this.setState(newNoteBoard);\n  }\n\n\n  render() {\n    return (\n      <body>\n        <h1>Welcome</h1>\n          <div>\n            <NoteForm />\n          </div>\n          <div>\n            <NoteBoard />\n          </div>\n      </body>\n    );\n  }\n}\n\nexport default TestApp;\n","import React from 'react';\nimport { Link, animateScroll as scroll} from \"react-scroll\";\n\nimport './nameBox.css';\n\n  const name = \"CREMIS\";\n  const nameBox = \"nameBoxRed\";\n  const nameBoxPink = \"nameBoxPink\";\n  const prideColors = [ \"nameBoxRed\", \"nameBoxOrange\", \"nameBoxYellow\",\n                        \"nameBoxGreen\", \"nameBoxBlue\", \"nameBoxPurple\"];\n\nclass NameBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {name: name, nameBox: nameBox, index: 0};\n    this.updateNameBox = this.updateNameBox.bind(this);\n  }\n\n  updateNameBox(event) {\n    this.setState({nameBox: prideColors[this.state.index]});\n  }\n\n  componentDidMount() {\n    this.setState({name: name})\n  }\n\n  render() {\n    return(\n      <div class={this.state.nameBox} style={this.props.currentColor}> {this.state.name}</div>\n    );\n  }\n\n}\n\nexport default NameBox;\n","import React from 'react'\nimport './welcomeButton.css'\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //the button needs to have a text and a function from the beginning. These will be sent with props.\n    this.state = {text: props.text};\n\n    this.executeFunction = this.executeFunction.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.style.overflow = document.getElementById(\"scroll-container\").style.overflow;\n  }\n  executeFunction() {\n    var container = document.getElementById(\"scroll-container\");\n    document.getElementById(\"hb\").scrollIntoView();\n    document.body.style.overflow = \"hidden\";\n    console.log(container);\n  }\n\n  render() {\n    return(\n      <div class=\"welcomeButton\" onClick={this.executeFunction}> {this.state.text}</div>\n    );\n  }\n\n}\n\nexport default Button;\n","import React from 'react'\n\nclass VSpace extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {padding: props.padding};\n  }\n\n  componentDidMount() {\n    console.log(this.state.padding);\n  }\n\n  render() {\n\n    return(\n      <div style={{marginTop: this.state.padding}}></div>\n    );\n  }\n\n}\n\nexport default VSpace;\n","import React from 'react'\nimport NameBox from './nameBox';\nimport Button from './button'\nimport VSpace from './../util/vSpace'\nimport './welcome.css'\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return(\n      <body>\n        <NameBox currentColor={this.props.currentColor}/>\n        <div class=\"welcome\">Welcome to my personal page. Let's see what we can achieve together!</div>\n        <VSpace padding={200}/>\n        <div id=\"sc\">\n        <Button text=\"Enter\" />\n        </div>\n        <VSpace padding={600}/>\n        <div id=\"hb\">\n        <Button text=\"Can you see me?\" />\n        </div>\n      </body>\n    );\n  }\n\n}\n\nexport default Welcome;\n","import React from 'react';\n\nfunction LongText(props) {\n  return(\n<h1>\n\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\nThis is a Long as text. This is a Long as text.\n\n</h1>\n);\n}\n\nexport default LongText;\n","import React from 'react'\n\nimport './topBar.css'\n\nclass TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {show: true};\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n          <nav id=\"topBar\" className=\"navbar navbar-dark bg-dark mb-3\">\n            <a className=\"navbar-brand\">\n              <div class=\"stickyTopBar\" style={this.props.currentColor}>{this.props.text}</div>\n            </a>\n          </nav>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default TopBar;\n","import React from 'react'\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //the button needs to have a text and a function from the beginning. These will be sent with props.\n    this.state = {text: props.text};\n  }\n\n  render() {\n    return(\n      <div class=\"welcomeButton\" style={{overflow: \"hidden\"}}>{this.props.text}</div>\n    );\n  }\n\n}\n\nexport default Button;\n","import React from 'react';\nimport Welcome from './../welcome/welcome';\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport VSpace from './../util/vSpace';\nimport LongText from './longText';\nimport TopBar from './topBar';\nimport NameBox from './../welcome/nameBox';\nimport Button from './../util/button';\n\nimport './../util/title.css';\nimport './../util/body.css';\nimport './home.css';\n\nconst prideColors = [ {backgroundColor: \"rgba(234, 62, 55, 0.9)\"},\n                      {backgroundColor: \"rgba(246, 143, 31, 0.9)\"},\n                      {backgroundColor: \"rgba(246, 213, 9, 0.9)\"},\n                      {backgroundColor: \"rgba(168, 203, 56, 0.9)\"},\n                      {backgroundColor: \"rgba(32, 154, 207, 0.9)\"},\n                      {backgroundColor: \"rgba(170, 82, 160, 0.9)\"},\n                     ];\n\nconst interval = clearInterval();\n\n//The entire application will live inside of the home component!\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    document.body.style.overflow = \"hidden\";\n    this.state = {colorIndex: 0, currentColor: {}, updateColor: true, topBarText: \"\", hasRenderedTopBar: false};\n    this.updateColor = this.updateColor.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.setUpdateColorTrue = this.setUpdateColorTrue.bind(this);\n    this.setUpdateColorFalse = this.setUpdateColorFalse.bind(this);\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    this.interval = setInterval(() => {\n      if(this.state.updateColor){\n        this.setState({colorIndex: (this.state.colorIndex + 1) % prideColors.length});\n      }\n      this.updateColor();},\n      1000);\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmountes\");\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll(event) {\n    if(window.pageYOffset > 167){\n\n      if(!this.state.hasRenderedTopBar){\n        this.setState({updateColor: false});\n        this.setState({topBarText: \"CREMIS\"});\n        this.setState({hasRenderedTopBar: true});\n      }\n    } else {\n      this.setState({updateColor: true});\n      this.setState({topBarText: \"\"});\n      this.setState({hasRenderedTopBar: false});\n\n    }\n  }\n\n  updateColor() {\n    this.setState({currentColor: prideColors[this.state.colorIndex]});\n  }\n\n  setUpdateColorTrue() {\n    this.setState({updateColor: true})\n  }\n\n  setUpdateColorFalse() {\n  this.setState({updateColor: false})\n  }\n\n  render() {\n    return(\n      <body id=\"topOfBody\">\n        <div onMouseOver={this.setUpdateColorTrue} onMouseLeave={this.setUpdateColorFalse} onClick={scroll.scrollToTop}>\n        <TopBar currentColor={this.state.currentColor} text={this.state.topBarText}/>\n        </div>\n        <div>\n\n        <NameBox currentColor={this.state.currentColor}/>\n        <div class=\"welcome\">\n        Welcome to my personal page. Let's see what we can achieve together!\n        <VSpace padding={200}/>\n        </div>\n        <div>\n        <Link activeClass=\"active\"\n          className=\"test1\"\n          to=\"navigation\"\n          spy={false}\n          smooth={true}\n          duration={800}\n          offset={-75}\n        >\n        <Button text=\"ENTER\"/>\n        </Link>\n        </div>\n\n\n          <div class=\"title\">\n          <VSpace padding={400} />\n          <Element name=\"navigation\" className=\"element\">\n          Navigation\n          </Element>\n          </div>\n          <div>\n            <VSpace padding={30} />\n          </div>\n          <div class=\"body\">\n            I'm happy you are taking your time exploring my webiste!\n            If you are on mobile, well I guess it sucks to suck...\n            If you are not on mobile, put your cursor over the tab in the upper left hand corner.\n            See how it is shifting colors! Wow, AMAZING right! Now press it, I'll wait... Wow wasn't that smooth, smooth scrolling amazing?\n            I think so too! Did you also notice that the tag now is the color of the titlebox when you pressed enter.\n            That feature took me like 30 hours to code so you better appreciate it!\n\n            Anyways, nice seeing you. This is a work in progress so don't expect too much...\n\n            Seeya!\n            /Gabriel\n          </div>\n          </div>\n\n          <div>\n            <VSpace padding={5000} />\n          </div>\n\n      </body>\n    );\n  }\n\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TestApp from './TestApp';\nimport Welcome from './welcome/welcome'\nimport Home from './home/home'\nimport * as serviceWorker from './serviceWorker';\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n  <html>\n    <body>\n      <div id=\"app\">\n        <div id=\"scroll-container\" style={{overflow: \"hidden\"}}>\n          <Home />\n      </div>\n      </div>\n    </body>\n  </html>, document.getElementById('root'));\n//ReactDOM.render(<div>hejo</div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}